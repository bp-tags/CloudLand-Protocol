// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Metadata.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Org.Dragonet.Cloudland.Net.Protocol {

  /// <summary>Holder for reflection information generated from Metadata.proto</summary>
  public static partial class MetadataReflection {

    #region Descriptor
    /// <summary>File descriptor for Metadata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MetadataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5NZXRhZGF0YS5wcm90bxIjb3JnLmRyYWdvbmV0LmNsb3VkbGFuZC5uZXQu",
            "cHJvdG9jb2wirgUKElNlcmlhbGl6ZWRNZXRhZGF0YRJVCgdlbnRyaWVzGAEg",
            "AygLMkQub3JnLmRyYWdvbmV0LmNsb3VkbGFuZC5uZXQucHJvdG9jb2wuU2Vy",
            "aWFsaXplZE1ldGFkYXRhLkVudHJpZXNFbnRyeRrJAwoNTWV0YWRhdGFFbnRy",
            "eRJcCgR0eXBlGAEgASgOMk4ub3JnLmRyYWdvbmV0LmNsb3VkbGFuZC5uZXQu",
            "cHJvdG9jb2wuU2VyaWFsaXplZE1ldGFkYXRhLk1ldGFkYXRhRW50cnkuRGF0",
            "YVR5cGUSFAoKaW50MzJWYWx1ZRgCIAEoBUgAEhQKCmludDY0VmFsdWUYAyAB",
            "KANIABIUCgpmbG9hdFZhbHVlGAQgASgCSAASFQoLZG91YmxlVmFsdWUYBSAB",
            "KAFIABIWCgxib29sZWFuVmFsdWUYBiABKAhIABIVCgtzdHJpbmdWYWx1ZRgH",
            "IAEoCUgAEhQKCmJ5dGVzVmFsdWUYCCABKAxIABJMCgltZXRhVmFsdWUYCSAB",
            "KAsyNy5vcmcuZHJhZ29uZXQuY2xvdWRsYW5kLm5ldC5wcm90b2NvbC5TZXJp",
            "YWxpemVkTWV0YWRhdGFIACJlCghEYXRhVHlwZRIJCgVJTlQzMhAAEgkKBUlO",
            "VDY0EAESCQoFRkxPQVQQAhIKCgZET1VCTEUQAxILCgdCT09MRUFOEAQSCgoG",
            "U1RSSU5HEAUSCQoFQllURVMQBhIICgRNRVRBEAdCBwoFdmFsdWUadQoMRW50",
            "cmllc0VudHJ5EgsKA2tleRgBIAEoDRJUCgV2YWx1ZRgCIAEoCzJFLm9yZy5k",
            "cmFnb25ldC5jbG91ZGxhbmQubmV0LnByb3RvY29sLlNlcmlhbGl6ZWRNZXRh",
            "ZGF0YS5NZXRhZGF0YUVudHJ5OgI4AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata), global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Parser, new[]{ "Entries" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Types.MetadataEntry), global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Types.MetadataEntry.Parser, new[]{ "Type", "Int32Value", "Int64Value", "FloatValue", "DoubleValue", "BooleanValue", "StringValue", "BytesValue", "MetaValue" }, new[]{ "Value" }, new[]{ typeof(global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Types.MetadataEntry.Types.DataType) }, null),
            null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SerializedMetadata : pb::IMessage<SerializedMetadata> {
    private static readonly pb::MessageParser<SerializedMetadata> _parser = new pb::MessageParser<SerializedMetadata>(() => new SerializedMetadata());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SerializedMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Dragonet.Cloudland.Net.Protocol.MetadataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializedMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializedMetadata(SerializedMetadata other) : this() {
      entries_ = other.entries_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializedMetadata Clone() {
      return new SerializedMetadata(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pbc::MapField<uint, global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Types.MetadataEntry>.Codec _map_entries_codec
        = new pbc::MapField<uint, global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Types.MetadataEntry>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Types.MetadataEntry.Parser), 10);
    private readonly pbc::MapField<uint, global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Types.MetadataEntry> entries_ = new pbc::MapField<uint, global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Types.MetadataEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<uint, global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Types.MetadataEntry> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SerializedMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SerializedMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Entries.Equals(other.Entries)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Entries.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _map_entries_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_map_entries_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SerializedMetadata other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _map_entries_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SerializedMetadata message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class MetadataEntry : pb::IMessage<MetadataEntry> {
        private static readonly pb::MessageParser<MetadataEntry> _parser = new pb::MessageParser<MetadataEntry>(() => new MetadataEntry());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MetadataEntry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetadataEntry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetadataEntry(MetadataEntry other) : this() {
          type_ = other.type_;
          switch (other.ValueCase) {
            case ValueOneofCase.Int32Value:
              Int32Value = other.Int32Value;
              break;
            case ValueOneofCase.Int64Value:
              Int64Value = other.Int64Value;
              break;
            case ValueOneofCase.FloatValue:
              FloatValue = other.FloatValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueOneofCase.BooleanValue:
              BooleanValue = other.BooleanValue;
              break;
            case ValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueOneofCase.BytesValue:
              BytesValue = other.BytesValue;
              break;
            case ValueOneofCase.MetaValue:
              MetaValue = other.MetaValue.Clone();
              break;
          }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetadataEntry Clone() {
          return new MetadataEntry(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Types.MetadataEntry.Types.DataType type_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Types.MetadataEntry.Types.DataType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "int32Value" field.</summary>
        public const int Int32ValueFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Int32Value {
          get { return valueCase_ == ValueOneofCase.Int32Value ? (int) value_ : 0; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.Int32Value;
          }
        }

        /// <summary>Field number for the "int64Value" field.</summary>
        public const int Int64ValueFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Int64Value {
          get { return valueCase_ == ValueOneofCase.Int64Value ? (long) value_ : 0L; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.Int64Value;
          }
        }

        /// <summary>Field number for the "floatValue" field.</summary>
        public const int FloatValueFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float FloatValue {
          get { return valueCase_ == ValueOneofCase.FloatValue ? (float) value_ : 0F; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.FloatValue;
          }
        }

        /// <summary>Field number for the "doubleValue" field.</summary>
        public const int DoubleValueFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double DoubleValue {
          get { return valueCase_ == ValueOneofCase.DoubleValue ? (double) value_ : 0D; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.DoubleValue;
          }
        }

        /// <summary>Field number for the "booleanValue" field.</summary>
        public const int BooleanValueFieldNumber = 6;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool BooleanValue {
          get { return valueCase_ == ValueOneofCase.BooleanValue ? (bool) value_ : false; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.BooleanValue;
          }
        }

        /// <summary>Field number for the "stringValue" field.</summary>
        public const int StringValueFieldNumber = 7;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StringValue {
          get { return valueCase_ == ValueOneofCase.StringValue ? (string) value_ : ""; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            valueCase_ = ValueOneofCase.StringValue;
          }
        }

        /// <summary>Field number for the "bytesValue" field.</summary>
        public const int BytesValueFieldNumber = 8;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString BytesValue {
          get { return valueCase_ == ValueOneofCase.BytesValue ? (pb::ByteString) value_ : pb::ByteString.Empty; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            valueCase_ = ValueOneofCase.BytesValue;
          }
        }

        /// <summary>Field number for the "metaValue" field.</summary>
        public const int MetaValueFieldNumber = 9;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata MetaValue {
          get { return valueCase_ == ValueOneofCase.MetaValue ? (global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata) value_ : null; }
          set {
            value_ = value;
            valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.MetaValue;
          }
        }

        private object value_;
        /// <summary>Enum of possible cases for the "value" oneof.</summary>
        public enum ValueOneofCase {
          None = 0,
          Int32Value = 2,
          Int64Value = 3,
          FloatValue = 4,
          DoubleValue = 5,
          BooleanValue = 6,
          StringValue = 7,
          BytesValue = 8,
          MetaValue = 9,
        }
        private ValueOneofCase valueCase_ = ValueOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ValueOneofCase ValueCase {
          get { return valueCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearValue() {
          valueCase_ = ValueOneofCase.None;
          value_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MetadataEntry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MetadataEntry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Int32Value != other.Int32Value) return false;
          if (Int64Value != other.Int64Value) return false;
          if (FloatValue != other.FloatValue) return false;
          if (DoubleValue != other.DoubleValue) return false;
          if (BooleanValue != other.BooleanValue) return false;
          if (StringValue != other.StringValue) return false;
          if (BytesValue != other.BytesValue) return false;
          if (!object.Equals(MetaValue, other.MetaValue)) return false;
          if (ValueCase != other.ValueCase) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != 0) hash ^= Type.GetHashCode();
          if (valueCase_ == ValueOneofCase.Int32Value) hash ^= Int32Value.GetHashCode();
          if (valueCase_ == ValueOneofCase.Int64Value) hash ^= Int64Value.GetHashCode();
          if (valueCase_ == ValueOneofCase.FloatValue) hash ^= FloatValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.DoubleValue) hash ^= DoubleValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.BooleanValue) hash ^= BooleanValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.StringValue) hash ^= StringValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.BytesValue) hash ^= BytesValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.MetaValue) hash ^= MetaValue.GetHashCode();
          hash ^= (int) valueCase_;
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Type != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (valueCase_ == ValueOneofCase.Int32Value) {
            output.WriteRawTag(16);
            output.WriteInt32(Int32Value);
          }
          if (valueCase_ == ValueOneofCase.Int64Value) {
            output.WriteRawTag(24);
            output.WriteInt64(Int64Value);
          }
          if (valueCase_ == ValueOneofCase.FloatValue) {
            output.WriteRawTag(37);
            output.WriteFloat(FloatValue);
          }
          if (valueCase_ == ValueOneofCase.DoubleValue) {
            output.WriteRawTag(41);
            output.WriteDouble(DoubleValue);
          }
          if (valueCase_ == ValueOneofCase.BooleanValue) {
            output.WriteRawTag(48);
            output.WriteBool(BooleanValue);
          }
          if (valueCase_ == ValueOneofCase.StringValue) {
            output.WriteRawTag(58);
            output.WriteString(StringValue);
          }
          if (valueCase_ == ValueOneofCase.BytesValue) {
            output.WriteRawTag(66);
            output.WriteBytes(BytesValue);
          }
          if (valueCase_ == ValueOneofCase.MetaValue) {
            output.WriteRawTag(74);
            output.WriteMessage(MetaValue);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (valueCase_ == ValueOneofCase.Int32Value) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Int32Value);
          }
          if (valueCase_ == ValueOneofCase.Int64Value) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Int64Value);
          }
          if (valueCase_ == ValueOneofCase.FloatValue) {
            size += 1 + 4;
          }
          if (valueCase_ == ValueOneofCase.DoubleValue) {
            size += 1 + 8;
          }
          if (valueCase_ == ValueOneofCase.BooleanValue) {
            size += 1 + 1;
          }
          if (valueCase_ == ValueOneofCase.StringValue) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
          }
          if (valueCase_ == ValueOneofCase.BytesValue) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(BytesValue);
          }
          if (valueCase_ == ValueOneofCase.MetaValue) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetaValue);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MetadataEntry other) {
          if (other == null) {
            return;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          switch (other.ValueCase) {
            case ValueOneofCase.Int32Value:
              Int32Value = other.Int32Value;
              break;
            case ValueOneofCase.Int64Value:
              Int64Value = other.Int64Value;
              break;
            case ValueOneofCase.FloatValue:
              FloatValue = other.FloatValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueOneofCase.BooleanValue:
              BooleanValue = other.BooleanValue;
              break;
            case ValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueOneofCase.BytesValue:
              BytesValue = other.BytesValue;
              break;
            case ValueOneofCase.MetaValue:
              MetaValue = other.MetaValue;
              break;
          }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                type_ = (global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Types.MetadataEntry.Types.DataType) input.ReadEnum();
                break;
              }
              case 16: {
                Int32Value = input.ReadInt32();
                break;
              }
              case 24: {
                Int64Value = input.ReadInt64();
                break;
              }
              case 37: {
                FloatValue = input.ReadFloat();
                break;
              }
              case 41: {
                DoubleValue = input.ReadDouble();
                break;
              }
              case 48: {
                BooleanValue = input.ReadBool();
                break;
              }
              case 58: {
                StringValue = input.ReadString();
                break;
              }
              case 66: {
                BytesValue = input.ReadBytes();
                break;
              }
              case 74: {
                global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata subBuilder = new global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata();
                if (valueCase_ == ValueOneofCase.MetaValue) {
                  subBuilder.MergeFrom(MetaValue);
                }
                input.ReadMessage(subBuilder);
                MetaValue = subBuilder;
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the MetadataEntry message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum DataType {
            [pbr::OriginalName("INT32")] Int32 = 0,
            [pbr::OriginalName("INT64")] Int64 = 1,
            [pbr::OriginalName("FLOAT")] Float = 2,
            [pbr::OriginalName("DOUBLE")] Double = 3,
            [pbr::OriginalName("BOOLEAN")] Boolean = 4,
            [pbr::OriginalName("STRING")] String = 5,
            [pbr::OriginalName("BYTES")] Bytes = 6,
            [pbr::OriginalName("META")] Meta = 7,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
