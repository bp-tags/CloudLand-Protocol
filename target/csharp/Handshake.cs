// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Handshake.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Org.Dragonet.Cloudland.Net.Protocol {

  /// <summary>Holder for reflection information generated from Handshake.proto</summary>
  public static partial class HandshakeReflection {

    #region Descriptor
    /// <summary>File descriptor for Handshake.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HandshakeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9IYW5kc2hha2UucHJvdG8SI29yZy5kcmFnb25ldC5jbG91ZGxhbmQubmV0",
            "LnByb3RvY29sIkcKFkNsaWVudEhhbmRzaGFrZU1lc3NhZ2USFQoNY2xpZW50",
            "VmVyc2lvbhgBIAEoDRIWCg5yZW5kZXJEaXN0YW5jZRgCIAEoDSLNAQoWU2Vy",
            "dmVySGFuZHNoYWtlTWVzc2FnZRIPCgdzdWNjZXNzGAEgASgIElgKBnN0YXR1",
            "cxgCIAEoDjJILm9yZy5kcmFnb25ldC5jbG91ZGxhbmQubmV0LnByb3RvY29s",
            "LlNlcnZlckhhbmRzaGFrZU1lc3NhZ2UuU2VydmVyU3RhdHVzEg8KB21lc3Nh",
            "Z2UYAyABKAkiNwoMU2VydmVyU3RhdHVzEgoKBk5PUk1BTBAAEhAKDE1BSU5U",
            "QUlOQU5DRRABEgkKBUVSUk9SEAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Dragonet.Cloudland.Net.Protocol.ClientHandshakeMessage), global::Org.Dragonet.Cloudland.Net.Protocol.ClientHandshakeMessage.Parser, new[]{ "ClientVersion", "RenderDistance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Dragonet.Cloudland.Net.Protocol.ServerHandshakeMessage), global::Org.Dragonet.Cloudland.Net.Protocol.ServerHandshakeMessage.Parser, new[]{ "Success", "Status", "Message" }, null, new[]{ typeof(global::Org.Dragonet.Cloudland.Net.Protocol.ServerHandshakeMessage.Types.ServerStatus) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// *
  ///  The first message that client should send. 
  /// </summary>
  public sealed partial class ClientHandshakeMessage : pb::IMessage<ClientHandshakeMessage> {
    private static readonly pb::MessageParser<ClientHandshakeMessage> _parser = new pb::MessageParser<ClientHandshakeMessage>(() => new ClientHandshakeMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientHandshakeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Dragonet.Cloudland.Net.Protocol.HandshakeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientHandshakeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientHandshakeMessage(ClientHandshakeMessage other) : this() {
      clientVersion_ = other.clientVersion_;
      renderDistance_ = other.renderDistance_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientHandshakeMessage Clone() {
      return new ClientHandshakeMessage(this);
    }

    /// <summary>Field number for the "clientVersion" field.</summary>
    public const int ClientVersionFieldNumber = 1;
    private uint clientVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ClientVersion {
      get { return clientVersion_; }
      set {
        clientVersion_ = value;
      }
    }

    /// <summary>Field number for the "renderDistance" field.</summary>
    public const int RenderDistanceFieldNumber = 2;
    private uint renderDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RenderDistance {
      get { return renderDistance_; }
      set {
        renderDistance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientHandshakeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientHandshakeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientVersion != other.ClientVersion) return false;
      if (RenderDistance != other.RenderDistance) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientVersion != 0) hash ^= ClientVersion.GetHashCode();
      if (RenderDistance != 0) hash ^= RenderDistance.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientVersion != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ClientVersion);
      }
      if (RenderDistance != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RenderDistance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientVersion);
      }
      if (RenderDistance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RenderDistance);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientHandshakeMessage other) {
      if (other == null) {
        return;
      }
      if (other.ClientVersion != 0) {
        ClientVersion = other.ClientVersion;
      }
      if (other.RenderDistance != 0) {
        RenderDistance = other.RenderDistance;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ClientVersion = input.ReadUInt32();
            break;
          }
          case 16: {
            RenderDistance = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// *
  ///  Server's reply to {ClientHandshakeMessage}. 
  /// </summary>
  public sealed partial class ServerHandshakeMessage : pb::IMessage<ServerHandshakeMessage> {
    private static readonly pb::MessageParser<ServerHandshakeMessage> _parser = new pb::MessageParser<ServerHandshakeMessage>(() => new ServerHandshakeMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerHandshakeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Dragonet.Cloudland.Net.Protocol.HandshakeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerHandshakeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerHandshakeMessage(ServerHandshakeMessage other) : this() {
      success_ = other.success_;
      status_ = other.status_;
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerHandshakeMessage Clone() {
      return new ServerHandshakeMessage(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Org.Dragonet.Cloudland.Net.Protocol.ServerHandshakeMessage.Types.ServerStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Org.Dragonet.Cloudland.Net.Protocol.ServerHandshakeMessage.Types.ServerStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerHandshakeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerHandshakeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerHandshakeMessage other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            status_ = (global::Org.Dragonet.Cloudland.Net.Protocol.ServerHandshakeMessage.Types.ServerStatus) input.ReadEnum();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ServerHandshakeMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// *
      ///  Server status
      /// </summary>
      public enum ServerStatus {
        [pbr::OriginalName("NORMAL")] Normal = 0,
        [pbr::OriginalName("MAINTAINANCE")] Maintainance = 1,
        [pbr::OriginalName("ERROR")] Error = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
