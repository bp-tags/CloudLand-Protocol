// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GUI.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Org.Dragonet.Cloudland.Net.Protocol {

  /// <summary>Holder for reflection information generated from GUI.proto</summary>
  public static partial class GUIReflection {

    #region Descriptor
    /// <summary>File descriptor for GUI.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GUIReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglHVUkucHJvdG8SI29yZy5kcmFnb25ldC5jbG91ZGxhbmQubmV0LnByb3Rv",
            "Y29sGg5NZXRhZGF0YS5wcm90bxoPSW52ZW50b3J5LnByb3RvIswBCgpHVUlF",
            "bGVtZW50EkEKBHR5cGUYASABKA4yMy5vcmcuZHJhZ29uZXQuY2xvdWRsYW5k",
            "Lm5ldC5wcm90b2NvbC5HVUlFbGVtZW50VHlwZRIJCgF4GAIgASgFEgkKAXkY",
            "AyABKAUSDQoFd2lkdGgYBCABKAUSDgoGaGVpZ2h0GAUgASgFEkYKBXZhbHVl",
            "GAYgASgLMjcub3JnLmRyYWdvbmV0LmNsb3VkbGFuZC5uZXQucHJvdG9jb2wu",
            "U2VyaWFsaXplZE1ldGFkYXRhIpkBChdTZXJ2ZXJXaW5kb3dPcGVuTWVzc2Fn",
            "ZRIQCgh3aW5kb3dJZBgBIAEoDRINCgV3aWR0aBgCIAEoBRIOCgZoZWlnaHQY",
            "AyABKAUSDQoFdGl0bGUYBCABKAkSPgoFaXRlbXMYBSADKAsyLy5vcmcuZHJh",
            "Z29uZXQuY2xvdWRsYW5kLm5ldC5wcm90b2NvbC5HVUlFbGVtZW50IiwKGFNl",
            "cnZlcldpbmRvd0Nsb3NlTWVzc2FnZRIQCgh3aW5kb3dJZBgBIAEoDSKaAgob",
            "Q2xpZW50V2luZG93SW50ZXJhY3RNZXNzYWdlEhAKCHdpbmRvd0lkGAEgASgN",
            "EhQKDGVsZW1lbnRJbmRleBgCIAEoBRJdCgZhY3Rpb24YAyABKA4yTS5vcmcu",
            "ZHJhZ29uZXQuY2xvdWRsYW5kLm5ldC5wcm90b2NvbC5DbGllbnRXaW5kb3dJ",
            "bnRlcmFjdE1lc3NhZ2UuV2luZG93QWN0aW9uEgkKAXgYBCABKAUSCQoBeRgF",
            "IAEoBRIOCgZwYXJhbTEYBiABKAUSDgoGcGFyYW0yGAcgASgFEg0KBXZhbHVl",
            "GGQgASgJIi8KDFdpbmRvd0FjdGlvbhIOCgpMRUZUX0NMSUNLEAASDwoLUklH",
            "SFRfQ0xJQ0sQASIsChhDbGllbnRXaW5kb3dDbG9zZU1lc3NhZ2USEAoId2lu",
            "ZG93SWQYASABKA0ijwEKIFNlcnZlclVwZGF0ZVdpbmRvd0VsZW1lbnRNZXNz",
            "YWdlEhAKCHdpbmRvd0lkGAEgASgNEhQKDGVsZW1lbnRJbmRleBgCIAEoBRJD",
            "CgpuZXdFbGVtZW50GAMgASgLMi8ub3JnLmRyYWdvbmV0LmNsb3VkbGFuZC5u",
            "ZXQucHJvdG9jb2wuR1VJRWxlbWVudCJzChlTZXJ2ZXJVcGRhdGVXaW5kb3dN",
            "ZXNzYWdlElYKB3JlY29yZHMYASADKAsyRS5vcmcuZHJhZ29uZXQuY2xvdWRs",
            "YW5kLm5ldC5wcm90b2NvbC5TZXJ2ZXJVcGRhdGVXaW5kb3dFbGVtZW50TWVz",
            "c2FnZSL0AQoZQ2xpZW50V2luZG93U3VibWl0TWVzc2FnZRIQCgh3aW5kb3dJ",
            "ZBgBIAEoDRJcCgdlbnRyaWVzGAIgAygLMksub3JnLmRyYWdvbmV0LmNsb3Vk",
            "bGFuZC5uZXQucHJvdG9jb2wuQ2xpZW50V2luZG93U3VibWl0TWVzc2FnZS5F",
            "bnRyaWVzRW50cnkaZwoMRW50cmllc0VudHJ5EgsKA2tleRgBIAEoDRJGCgV2",
            "YWx1ZRgCIAEoCzI3Lm9yZy5kcmFnb25ldC5jbG91ZGxhbmQubmV0LnByb3Rv",
            "Y29sLlNlcmlhbGl6ZWRNZXRhZGF0YToCOAEiXAoXU2VydmVyQ3Vyc29ySXRl",
            "bU1lc3NhZ2USQQoEaXRlbRgBIAEoCzIzLm9yZy5kcmFnb25ldC5jbG91ZGxh",
            "bmQubmV0LnByb3RvY29sLlNlcmlhbGl6ZWRJdGVtKnAKDkdVSUVsZW1lbnRU",
            "eXBlEggKBFRFWFQQABIKCgZCVVRUT04QARIKCgZTVUJNSVQQAhIOCgpMSU5F",
            "X0lOUFVUEAMSDgoKQVJFQV9JTlBVVBAEEg0KCUlURU1fU0xPVBAFEg0KCUlO",
            "VkVOVE9SWRAGYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Org.Dragonet.Cloudland.Net.Protocol.MetadataReflection.Descriptor, global::Org.Dragonet.Cloudland.Net.Protocol.InventoryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Org.Dragonet.Cloudland.Net.Protocol.GUIElementType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Dragonet.Cloudland.Net.Protocol.GUIElement), global::Org.Dragonet.Cloudland.Net.Protocol.GUIElement.Parser, new[]{ "Type", "X", "Y", "Width", "Height", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Dragonet.Cloudland.Net.Protocol.ServerWindowOpenMessage), global::Org.Dragonet.Cloudland.Net.Protocol.ServerWindowOpenMessage.Parser, new[]{ "WindowId", "Width", "Height", "Title", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Dragonet.Cloudland.Net.Protocol.ServerWindowCloseMessage), global::Org.Dragonet.Cloudland.Net.Protocol.ServerWindowCloseMessage.Parser, new[]{ "WindowId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Dragonet.Cloudland.Net.Protocol.ClientWindowInteractMessage), global::Org.Dragonet.Cloudland.Net.Protocol.ClientWindowInteractMessage.Parser, new[]{ "WindowId", "ElementIndex", "Action", "X", "Y", "Param1", "Param2", "Value" }, null, new[]{ typeof(global::Org.Dragonet.Cloudland.Net.Protocol.ClientWindowInteractMessage.Types.WindowAction) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Dragonet.Cloudland.Net.Protocol.ClientWindowCloseMessage), global::Org.Dragonet.Cloudland.Net.Protocol.ClientWindowCloseMessage.Parser, new[]{ "WindowId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Dragonet.Cloudland.Net.Protocol.ServerUpdateWindowElementMessage), global::Org.Dragonet.Cloudland.Net.Protocol.ServerUpdateWindowElementMessage.Parser, new[]{ "WindowId", "ElementIndex", "NewElement" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Dragonet.Cloudland.Net.Protocol.ServerUpdateWindowMessage), global::Org.Dragonet.Cloudland.Net.Protocol.ServerUpdateWindowMessage.Parser, new[]{ "Records" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Dragonet.Cloudland.Net.Protocol.ClientWindowSubmitMessage), global::Org.Dragonet.Cloudland.Net.Protocol.ClientWindowSubmitMessage.Parser, new[]{ "WindowId", "Entries" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Dragonet.Cloudland.Net.Protocol.ServerCursorItemMessage), global::Org.Dragonet.Cloudland.Net.Protocol.ServerCursorItemMessage.Parser, new[]{ "Item" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum GUIElementType {
    [pbr::OriginalName("TEXT")] Text = 0,
    [pbr::OriginalName("BUTTON")] Button = 1,
    [pbr::OriginalName("SUBMIT")] Submit = 2,
    [pbr::OriginalName("LINE_INPUT")] LineInput = 3,
    [pbr::OriginalName("AREA_INPUT")] AreaInput = 4,
    [pbr::OriginalName("ITEM_SLOT")] ItemSlot = 5,
    [pbr::OriginalName("INVENTORY")] Inventory = 6,
  }

  #endregion

  #region Messages
  public sealed partial class GUIElement : pb::IMessage<GUIElement> {
    private static readonly pb::MessageParser<GUIElement> _parser = new pb::MessageParser<GUIElement>(() => new GUIElement());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GUIElement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Dragonet.Cloudland.Net.Protocol.GUIReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GUIElement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GUIElement(GUIElement other) : this() {
      type_ = other.type_;
      x_ = other.x_;
      y_ = other.y_;
      width_ = other.width_;
      height_ = other.height_;
      Value = other.value_ != null ? other.Value.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GUIElement Clone() {
      return new GUIElement(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Org.Dragonet.Cloudland.Net.Protocol.GUIElementType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Org.Dragonet.Cloudland.Net.Protocol.GUIElementType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 4;
    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 5;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 6;
    private global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GUIElement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GUIElement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (Width != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Height);
      }
      if (value_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GUIElement other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata();
        }
        Value.MergeFrom(other.Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::Org.Dragonet.Cloudland.Net.Protocol.GUIElementType) input.ReadEnum();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 32: {
            Width = input.ReadInt32();
            break;
          }
          case 40: {
            Height = input.ReadInt32();
            break;
          }
          case 50: {
            if (value_ == null) {
              value_ = new global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata();
            }
            input.ReadMessage(value_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// *
  ///  Can also be used to refresh all elements
  /// </summary>
  public sealed partial class ServerWindowOpenMessage : pb::IMessage<ServerWindowOpenMessage> {
    private static readonly pb::MessageParser<ServerWindowOpenMessage> _parser = new pb::MessageParser<ServerWindowOpenMessage>(() => new ServerWindowOpenMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerWindowOpenMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Dragonet.Cloudland.Net.Protocol.GUIReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerWindowOpenMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerWindowOpenMessage(ServerWindowOpenMessage other) : this() {
      windowId_ = other.windowId_;
      width_ = other.width_;
      height_ = other.height_;
      title_ = other.title_;
      items_ = other.items_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerWindowOpenMessage Clone() {
      return new ServerWindowOpenMessage(this);
    }

    /// <summary>Field number for the "windowId" field.</summary>
    public const int WindowIdFieldNumber = 1;
    private uint windowId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WindowId {
      get { return windowId_; }
      set {
        windowId_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 2;
    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 3;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 4;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Org.Dragonet.Cloudland.Net.Protocol.GUIElement> _repeated_items_codec
        = pb::FieldCodec.ForMessage(42, global::Org.Dragonet.Cloudland.Net.Protocol.GUIElement.Parser);
    private readonly pbc::RepeatedField<global::Org.Dragonet.Cloudland.Net.Protocol.GUIElement> items_ = new pbc::RepeatedField<global::Org.Dragonet.Cloudland.Net.Protocol.GUIElement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Org.Dragonet.Cloudland.Net.Protocol.GUIElement> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerWindowOpenMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerWindowOpenMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WindowId != other.WindowId) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Title != other.Title) return false;
      if(!items_.Equals(other.items_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WindowId != 0) hash ^= WindowId.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      hash ^= items_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WindowId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(WindowId);
      }
      if (Width != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Height);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      items_.WriteTo(output, _repeated_items_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WindowId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WindowId);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerWindowOpenMessage other) {
      if (other == null) {
        return;
      }
      if (other.WindowId != 0) {
        WindowId = other.WindowId;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      items_.Add(other.items_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            WindowId = input.ReadUInt32();
            break;
          }
          case 16: {
            Width = input.ReadInt32();
            break;
          }
          case 24: {
            Height = input.ReadInt32();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerWindowCloseMessage : pb::IMessage<ServerWindowCloseMessage> {
    private static readonly pb::MessageParser<ServerWindowCloseMessage> _parser = new pb::MessageParser<ServerWindowCloseMessage>(() => new ServerWindowCloseMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerWindowCloseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Dragonet.Cloudland.Net.Protocol.GUIReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerWindowCloseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerWindowCloseMessage(ServerWindowCloseMessage other) : this() {
      windowId_ = other.windowId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerWindowCloseMessage Clone() {
      return new ServerWindowCloseMessage(this);
    }

    /// <summary>Field number for the "windowId" field.</summary>
    public const int WindowIdFieldNumber = 1;
    private uint windowId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WindowId {
      get { return windowId_; }
      set {
        windowId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerWindowCloseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerWindowCloseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WindowId != other.WindowId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WindowId != 0) hash ^= WindowId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WindowId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(WindowId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WindowId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WindowId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerWindowCloseMessage other) {
      if (other == null) {
        return;
      }
      if (other.WindowId != 0) {
        WindowId = other.WindowId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            WindowId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClientWindowInteractMessage : pb::IMessage<ClientWindowInteractMessage> {
    private static readonly pb::MessageParser<ClientWindowInteractMessage> _parser = new pb::MessageParser<ClientWindowInteractMessage>(() => new ClientWindowInteractMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientWindowInteractMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Dragonet.Cloudland.Net.Protocol.GUIReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientWindowInteractMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientWindowInteractMessage(ClientWindowInteractMessage other) : this() {
      windowId_ = other.windowId_;
      elementIndex_ = other.elementIndex_;
      action_ = other.action_;
      x_ = other.x_;
      y_ = other.y_;
      param1_ = other.param1_;
      param2_ = other.param2_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientWindowInteractMessage Clone() {
      return new ClientWindowInteractMessage(this);
    }

    /// <summary>Field number for the "windowId" field.</summary>
    public const int WindowIdFieldNumber = 1;
    private uint windowId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WindowId {
      get { return windowId_; }
      set {
        windowId_ = value;
      }
    }

    /// <summary>Field number for the "elementIndex" field.</summary>
    public const int ElementIndexFieldNumber = 2;
    private int elementIndex_;
    /// <summary>
    ///  value -1 for clicking the background
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ElementIndex {
      get { return elementIndex_; }
      set {
        elementIndex_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private global::Org.Dragonet.Cloudland.Net.Protocol.ClientWindowInteractMessage.Types.WindowAction action_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Org.Dragonet.Cloudland.Net.Protocol.ClientWindowInteractMessage.Types.WindowAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 4;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 5;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "param1" field.</summary>
    public const int Param1FieldNumber = 6;
    private int param1_;
    /// <summary>
    ///  reserved for special cases
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Param1 {
      get { return param1_; }
      set {
        param1_ = value;
      }
    }

    /// <summary>Field number for the "param2" field.</summary>
    public const int Param2FieldNumber = 7;
    private int param2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Param2 {
      get { return param2_; }
      set {
        param2_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 100;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientWindowInteractMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientWindowInteractMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WindowId != other.WindowId) return false;
      if (ElementIndex != other.ElementIndex) return false;
      if (Action != other.Action) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Param1 != other.Param1) return false;
      if (Param2 != other.Param2) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WindowId != 0) hash ^= WindowId.GetHashCode();
      if (ElementIndex != 0) hash ^= ElementIndex.GetHashCode();
      if (Action != 0) hash ^= Action.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Param1 != 0) hash ^= Param1.GetHashCode();
      if (Param2 != 0) hash ^= Param2.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WindowId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(WindowId);
      }
      if (ElementIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ElementIndex);
      }
      if (Action != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Action);
      }
      if (X != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Y);
      }
      if (Param1 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Param1);
      }
      if (Param2 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Param2);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WindowId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WindowId);
      }
      if (ElementIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ElementIndex);
      }
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Param1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param1);
      }
      if (Param2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param2);
      }
      if (Value.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientWindowInteractMessage other) {
      if (other == null) {
        return;
      }
      if (other.WindowId != 0) {
        WindowId = other.WindowId;
      }
      if (other.ElementIndex != 0) {
        ElementIndex = other.ElementIndex;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Param1 != 0) {
        Param1 = other.Param1;
      }
      if (other.Param2 != 0) {
        Param2 = other.Param2;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            WindowId = input.ReadUInt32();
            break;
          }
          case 16: {
            ElementIndex = input.ReadInt32();
            break;
          }
          case 24: {
            action_ = (global::Org.Dragonet.Cloudland.Net.Protocol.ClientWindowInteractMessage.Types.WindowAction) input.ReadEnum();
            break;
          }
          case 32: {
            X = input.ReadInt32();
            break;
          }
          case 40: {
            Y = input.ReadInt32();
            break;
          }
          case 48: {
            Param1 = input.ReadInt32();
            break;
          }
          case 56: {
            Param2 = input.ReadInt32();
            break;
          }
          case 802: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ClientWindowInteractMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum WindowAction {
        [pbr::OriginalName("LEFT_CLICK")] LeftClick = 0,
        [pbr::OriginalName("RIGHT_CLICK")] RightClick = 1,
      }

    }
    #endregion

  }

  public sealed partial class ClientWindowCloseMessage : pb::IMessage<ClientWindowCloseMessage> {
    private static readonly pb::MessageParser<ClientWindowCloseMessage> _parser = new pb::MessageParser<ClientWindowCloseMessage>(() => new ClientWindowCloseMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientWindowCloseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Dragonet.Cloudland.Net.Protocol.GUIReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientWindowCloseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientWindowCloseMessage(ClientWindowCloseMessage other) : this() {
      windowId_ = other.windowId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientWindowCloseMessage Clone() {
      return new ClientWindowCloseMessage(this);
    }

    /// <summary>Field number for the "windowId" field.</summary>
    public const int WindowIdFieldNumber = 1;
    private uint windowId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WindowId {
      get { return windowId_; }
      set {
        windowId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientWindowCloseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientWindowCloseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WindowId != other.WindowId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WindowId != 0) hash ^= WindowId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WindowId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(WindowId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WindowId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WindowId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientWindowCloseMessage other) {
      if (other == null) {
        return;
      }
      if (other.WindowId != 0) {
        WindowId = other.WindowId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            WindowId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerUpdateWindowElementMessage : pb::IMessage<ServerUpdateWindowElementMessage> {
    private static readonly pb::MessageParser<ServerUpdateWindowElementMessage> _parser = new pb::MessageParser<ServerUpdateWindowElementMessage>(() => new ServerUpdateWindowElementMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerUpdateWindowElementMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Dragonet.Cloudland.Net.Protocol.GUIReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerUpdateWindowElementMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerUpdateWindowElementMessage(ServerUpdateWindowElementMessage other) : this() {
      windowId_ = other.windowId_;
      elementIndex_ = other.elementIndex_;
      NewElement = other.newElement_ != null ? other.NewElement.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerUpdateWindowElementMessage Clone() {
      return new ServerUpdateWindowElementMessage(this);
    }

    /// <summary>Field number for the "windowId" field.</summary>
    public const int WindowIdFieldNumber = 1;
    private uint windowId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WindowId {
      get { return windowId_; }
      set {
        windowId_ = value;
      }
    }

    /// <summary>Field number for the "elementIndex" field.</summary>
    public const int ElementIndexFieldNumber = 2;
    private int elementIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ElementIndex {
      get { return elementIndex_; }
      set {
        elementIndex_ = value;
      }
    }

    /// <summary>Field number for the "newElement" field.</summary>
    public const int NewElementFieldNumber = 3;
    private global::Org.Dragonet.Cloudland.Net.Protocol.GUIElement newElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Org.Dragonet.Cloudland.Net.Protocol.GUIElement NewElement {
      get { return newElement_; }
      set {
        newElement_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerUpdateWindowElementMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerUpdateWindowElementMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WindowId != other.WindowId) return false;
      if (ElementIndex != other.ElementIndex) return false;
      if (!object.Equals(NewElement, other.NewElement)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WindowId != 0) hash ^= WindowId.GetHashCode();
      if (ElementIndex != 0) hash ^= ElementIndex.GetHashCode();
      if (newElement_ != null) hash ^= NewElement.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WindowId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(WindowId);
      }
      if (ElementIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ElementIndex);
      }
      if (newElement_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NewElement);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WindowId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WindowId);
      }
      if (ElementIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ElementIndex);
      }
      if (newElement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewElement);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerUpdateWindowElementMessage other) {
      if (other == null) {
        return;
      }
      if (other.WindowId != 0) {
        WindowId = other.WindowId;
      }
      if (other.ElementIndex != 0) {
        ElementIndex = other.ElementIndex;
      }
      if (other.newElement_ != null) {
        if (newElement_ == null) {
          newElement_ = new global::Org.Dragonet.Cloudland.Net.Protocol.GUIElement();
        }
        NewElement.MergeFrom(other.NewElement);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            WindowId = input.ReadUInt32();
            break;
          }
          case 16: {
            ElementIndex = input.ReadInt32();
            break;
          }
          case 26: {
            if (newElement_ == null) {
              newElement_ = new global::Org.Dragonet.Cloudland.Net.Protocol.GUIElement();
            }
            input.ReadMessage(newElement_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerUpdateWindowMessage : pb::IMessage<ServerUpdateWindowMessage> {
    private static readonly pb::MessageParser<ServerUpdateWindowMessage> _parser = new pb::MessageParser<ServerUpdateWindowMessage>(() => new ServerUpdateWindowMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerUpdateWindowMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Dragonet.Cloudland.Net.Protocol.GUIReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerUpdateWindowMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerUpdateWindowMessage(ServerUpdateWindowMessage other) : this() {
      records_ = other.records_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerUpdateWindowMessage Clone() {
      return new ServerUpdateWindowMessage(this);
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Org.Dragonet.Cloudland.Net.Protocol.ServerUpdateWindowElementMessage> _repeated_records_codec
        = pb::FieldCodec.ForMessage(10, global::Org.Dragonet.Cloudland.Net.Protocol.ServerUpdateWindowElementMessage.Parser);
    private readonly pbc::RepeatedField<global::Org.Dragonet.Cloudland.Net.Protocol.ServerUpdateWindowElementMessage> records_ = new pbc::RepeatedField<global::Org.Dragonet.Cloudland.Net.Protocol.ServerUpdateWindowElementMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Org.Dragonet.Cloudland.Net.Protocol.ServerUpdateWindowElementMessage> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerUpdateWindowMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerUpdateWindowMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!records_.Equals(other.records_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= records_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      records_.WriteTo(output, _repeated_records_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += records_.CalculateSize(_repeated_records_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerUpdateWindowMessage other) {
      if (other == null) {
        return;
      }
      records_.Add(other.records_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClientWindowSubmitMessage : pb::IMessage<ClientWindowSubmitMessage> {
    private static readonly pb::MessageParser<ClientWindowSubmitMessage> _parser = new pb::MessageParser<ClientWindowSubmitMessage>(() => new ClientWindowSubmitMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientWindowSubmitMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Dragonet.Cloudland.Net.Protocol.GUIReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientWindowSubmitMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientWindowSubmitMessage(ClientWindowSubmitMessage other) : this() {
      windowId_ = other.windowId_;
      entries_ = other.entries_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientWindowSubmitMessage Clone() {
      return new ClientWindowSubmitMessage(this);
    }

    /// <summary>Field number for the "windowId" field.</summary>
    public const int WindowIdFieldNumber = 1;
    private uint windowId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WindowId {
      get { return windowId_; }
      set {
        windowId_ = value;
      }
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 2;
    private static readonly pbc::MapField<uint, global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata>.Codec _map_entries_codec
        = new pbc::MapField<uint, global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata>.Codec(pb::FieldCodec.ForUInt32(8), pb::FieldCodec.ForMessage(18, global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata.Parser), 18);
    private readonly pbc::MapField<uint, global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata> entries_ = new pbc::MapField<uint, global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<uint, global::Org.Dragonet.Cloudland.Net.Protocol.SerializedMetadata> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientWindowSubmitMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientWindowSubmitMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WindowId != other.WindowId) return false;
      if (!Entries.Equals(other.Entries)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WindowId != 0) hash ^= WindowId.GetHashCode();
      hash ^= Entries.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WindowId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(WindowId);
      }
      entries_.WriteTo(output, _map_entries_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WindowId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WindowId);
      }
      size += entries_.CalculateSize(_map_entries_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientWindowSubmitMessage other) {
      if (other == null) {
        return;
      }
      if (other.WindowId != 0) {
        WindowId = other.WindowId;
      }
      entries_.Add(other.entries_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            WindowId = input.ReadUInt32();
            break;
          }
          case 18: {
            entries_.AddEntriesFrom(input, _map_entries_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerCursorItemMessage : pb::IMessage<ServerCursorItemMessage> {
    private static readonly pb::MessageParser<ServerCursorItemMessage> _parser = new pb::MessageParser<ServerCursorItemMessage>(() => new ServerCursorItemMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerCursorItemMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.Dragonet.Cloudland.Net.Protocol.GUIReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCursorItemMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCursorItemMessage(ServerCursorItemMessage other) : this() {
      Item = other.item_ != null ? other.Item.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerCursorItemMessage Clone() {
      return new ServerCursorItemMessage(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::Org.Dragonet.Cloudland.Net.Protocol.SerializedItem item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Org.Dragonet.Cloudland.Net.Protocol.SerializedItem Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerCursorItemMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerCursorItemMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerCursorItemMessage other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          item_ = new global::Org.Dragonet.Cloudland.Net.Protocol.SerializedItem();
        }
        Item.MergeFrom(other.Item);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (item_ == null) {
              item_ = new global::Org.Dragonet.Cloudland.Net.Protocol.SerializedItem();
            }
            input.ReadMessage(item_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
