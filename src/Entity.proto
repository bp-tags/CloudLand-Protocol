syntax = "proto3";
package org.dragonet.cloudland.net.protocol;

import "Metadata.proto";
import "DataTypes.proto";

message ServerAddEntityMessage {
  uint64 entityId = 1;
  fixed32 entityType = 2;
  double x = 3;
  double y = 4;
  double z = 5;
  float yaw = 6;
  float pitch = 7;
  SerializedMetadata meta = 8;
  
  /* ==== vehicles starts from id=50 ==== */
  // entity slots, for sitting as a example
  bool entitySlotsEnabled = 50;
  repeated Vector3F entitySlots = 51;
}

message ServerEntityUpdateMessage {
  uint64 entityId = 1;
  bool flagPosition = 2;
  double x = 3;
  double y = 4;
  double z = 5;
  bool flagRotation = 6;
  float yaw = 7;
  float pitch = 8;
  bool flagMeta = 9;
  SerializedMetadata meta = 10;
}

message ServerRemoveEntityMessage {
  uint64 entityId = 1;
}

message ServerClearEntitiesMessage {
}

/*
 * Establish a parent-child relationship between two entities. 
 * Once it's done, we will only use RELATIVE position do describe the
 * child entity. For example, when someone enters a spaceship. 
 */
message ServerEntityHierarchicalControlMessage {
  uint64 entityId = 1;
  uint64 targetEntityId = 2;
  
  enum HierarchicalAction {
    ENTER = 0;
    LEAVING_TO_PASSENGER = 1;
    LEAVING_TO_OUTSIDE = 2;
  }
  HierarchicalAction action = 3;
  
  // local position for entering or leaving to passenger, world position for leaving outside. 
  Vector3F position = 10;
}

/*
 * Used to control the binding between two entities. 
 * It uses slots, if a player is alredy in another entity,
 * i will firstly break the relationship and then transform
 * the state from being a passenger to a slot user. 
 * For example, you can enter a spaceship(entering) and then
 * sit on the chair(taking a slot). 
 */
message ServerEntityBindingControlMessage {
  uint64 entityId = 1;
  uint64 targetEntityId = 2;
  
  int32 slotId = 3;
}

/* ====== Client Messages ====== */


message ClientEntityInteractMessage {
  uint64 targetEntityId = 1;
  fixed32 mouseButton = 2; // one of three: 0/1/2=left/right/middle
}
